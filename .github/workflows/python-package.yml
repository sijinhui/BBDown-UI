# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-14, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5

    - name: Install the project
      run: uv sync --locked --all-extras --dev

    - name: Build macOS App
      if: matrix.os == 'macos-14'
      #env:
      #  NUITKA_CACHE_DIR: ${{ github.workspace }}/.nuitka-cache
      run: |
        source .venv/bin/activate
        nuitka \
          --macos-create-app-bundle \
          --macos-app-mode=gui \
          --standalone \
          --enable-plugin=pyside6 \
          --follow-import-to=lib \
          --include-package-data=pyyaml \
          --show-progress \
          --output-dir=o \
          main.py

    - name: Build Windows App
      if: matrix.os == 'windows-latest'
      run: |
        .venv\Scripts\activate
        nuitka --onefile --windows-disable-console --standalone --enable-plugin=pyside6 --follow-import-to=lib --include-package-data=pyyaml --show-progress --output-dir=o main.py

    # 为 release 准备压缩包
    - name: Prepare macOS release archive
      if: matrix.os == 'macos-14' && github.event_name == 'release'
      run: |
        cd o
        zip -r ../BBDown-UI-macOS.zip main.app/
        cd ..

    - name: Prepare Windows release archive
      if: matrix.os == 'windows-latest' && github.event_name == 'release'
      run: |
        cd o
        7z a ../BBDown-UI-Windows.zip main.exe
        cd ..

    # 上传到 release
    - name: Upload macOS release asset
      if: matrix.os == 'macos-14' && github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./BBDown-UI-macOS.zip
        asset_name: BBDown-UI-macOS.zip
        asset_content_type: application/zip

    - name: Upload Windows release asset
      if: matrix.os == 'windows-latest' && github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./BBDown-UI-Windows.zip
        asset_name: BBDown-UI-Windows.zip
        asset_content_type: application/zip

    # 保持原有的 artifact 上传（用于非 release 构建）
    - name: Archive the build
      if: github.event_name != 'release'
      uses: actions/upload-artifact@v4
      with:
        name: BBDown-UI-${{ matrix.os }}
        path: o/