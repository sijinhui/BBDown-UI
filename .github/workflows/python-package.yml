# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-13, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5

    - name: Install the project
      run: uv sync --locked --all-extras --dev

    - name: Build macOS App
      if: matrix.os == 'macos-13'
      #env:
      #  NUITKA_CACHE_DIR: ${{ github.workspace }}/.nuitka-cache
      run: |
        source .venv/bin/activate
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
        echo "PATH=$VIRTUAL_ENV/bin:$PATH" >> $GITHUB_ENV
        nuitka \
          --macos-create-app-bundle \
          --macos-app-mode=gui \
          --standalone \
          --enable-plugin=pyside6 \
          --include-package-data=pyyaml \
          --show-progress \
          --output-dir=o \
          main.py

    - name: Build Windows App
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: |
        .venv\Scripts\activate
        echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV
        echo "PATH=.venv\Scripts;$PATH" >> $GITHUB_ENV
        nuitka ^
          --onefile ^
          --windows-disable-console ^
          --standalone ^
          --enable-plugin=pyside6 ^
          --include-package-data=pyyaml ^
          --show-progress ^
          --output-dir=o ^
          main.py

    - name: Archive the build
      uses: actions/upload-artifact@v4
      with:
        name: AinnoLabel-${{ matrix.os }}
        path: o/

